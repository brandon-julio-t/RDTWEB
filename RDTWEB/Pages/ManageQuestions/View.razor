@page "/ManageQuestions/{id?}"

@attribute [Authorize(Roles = "Admin")]

@using Microsoft.EntityFrameworkCore
@using RDTWEB.Models

@inject ApplicationDbContext Context

@if (IsEditing)
{
    <div class="form-group">
        <input @bind-value="@QuestionSet.Title" class="form-control" />
    </div>
}
else
{
    <h3>@QuestionSet.Title</h3>
}

<section>
    @for (var i = 0; i < QuestionSet.Questions.Count; i++)
    {
        var question = QuestionSet.Questions[i];
        <ViewQuestion Question="@question" Number="i + 1" OnDelete="q => OnQuestionDeleted((Question) q)" />
    }
</section>

@if (IsUpdateSuccess)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        Update Success.
        <button @onclick="() => IsUpdateSuccess = false" type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (IsEditing)
{
    <button @onclick="AddQuestion" class="btn btn-primary">Add Question</button>
    <button @onclick="UpdateQuestionSet" class="btn btn-success">Save</button>
    <button @onclick="() => IsEditing = false" class="btn btn-danger">Cancel</button>
}
else
{
    <button @onclick="() => IsEditing = true" class="btn btn-primary">Edit</button>
    <NavLink href="ManageQuestions" class="btn btn-secondary">Back</NavLink>
}


@code {
    [Parameter]
    public string Id { get; set; }

    public QuestionSet QuestionSet { get; set; }
    public bool IsEditing { get; set; } = false;
    public bool IsUpdateSuccess { get; set; } = false;

    protected override Task OnInitializedAsync()
    {
        QuestionSet = Context.QuestionSets
            .Include(questionSet => questionSet.Questions)
            .AsSplitQuery()
            .Single(questionSet => questionSet.Id.ToString() == Id);
    
        return base.OnInitializedAsync();
    }

    public void AddQuestion()
    {
        QuestionSet.Questions.Add(new Question());
    }

    public void UpdateQuestionSet()
    {
        IsUpdateSuccess = true;
        IsEditing = false;
        Context.Update(QuestionSet);
        Context.SaveChangesAsync();
    }

    public void OnQuestionDeleted(Question question)
    {
        QuestionSet.Questions.Remove(question);
    }
}
