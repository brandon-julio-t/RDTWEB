@page "/ManageQuestions"

@attribute [Authorize(Roles = "Admin")]

@using RDTWEB.Models
@using RDTWEB.ViewModels
@using Microsoft.EntityFrameworkCore
@using System.Linq

@inject ApplicationDbContext Context
@inject NavigationManager NavManager

<h3>Manage Questions</h3>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Start</th>
                <th>End</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vm in QuestionSetViewModels)
            {
                <tr>
                    <td class="align-middle">@vm.QuestionSet.Id</td>
                    <td class="align-middle">@vm.QuestionSet.Title</td>
                    <td class="align-middle">@(vm.QuestionSet.StartAt?.ToString() ?? "-")</td>
                    <td class="align-middle">@(vm.QuestionSet.EndAt?.ToString() ?? "-")</td>
                    <td class="btn-group" role="group" aria-label="Actions">
                        <NavLink class="btn btn-secondary" href="@($"/ManageQuestions/{vm.QuestionSet.Id}")">View</NavLink>
                        <button @onclick="() => OnDelete(vm)" class="btn btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<NavLink href="/ManageQuestions/Create" class="btn btn-primary">Create New Question Set</NavLink>

@code {
    public List<QuestionSetViewModel> QuestionSetViewModels = new();

    protected override Task OnInitializedAsync()
    {
        RefreshQuestionSets();
        return base.OnInitializedAsync();
    }

    private void RefreshQuestionSets()
    {
        QuestionSetViewModels = Context.QuestionSets
            .Include(questionSet => questionSet.Questions)
            .Select(questionSet => new QuestionSetViewModel { QuestionSet = questionSet })
            .ToList();
    }

    public void OnDelete(QuestionSetViewModel vm)
    {
        QuestionSetViewModels.Remove(vm);
        Context.Remove(vm.QuestionSet);
        Context.SaveChangesAsync();
    }
}
