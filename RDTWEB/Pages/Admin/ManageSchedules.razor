@page "/ManageSchedules"

@attribute [Authorize(Roles = "Admin")]

@inject ApplicationDbContext _context

<MudText Class="mb-4" Typo="Typo.h3">Manage Schedules</MudText>

<MudSimpleTable Hover="true" Striped="true">
    <thead>
    <tr>
        <th>ID</th>
        <th>Title</th>
        <th>Start At</th>
        <th>End At</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    <Virtualize Items="QuestionSetViewModels">
        <tr>
            <td class="align-middle">@context.QuestionSet.Id</td>
            <td class="align-middle">@context.QuestionSet.Title</td>
            @if (context.IsEditing)
            {
                <td class="align-middle">
                    <input @bind="context.QuestionSet.StartAt" @bind:format="yyyy-MM-ddTHH:mm" type="datetime-local" class="form-control"/>
                </td>
                <td class="align-middle">
                    <input @bind="context.QuestionSet.EndAt" @bind:format="yyyy-MM-ddTHH:mm" type="datetime-local" class="form-control"/>
                </td>
                <td class="btn-group align-middle" role="group" aria-label="Actions">
                    <MudGrid>
                        <MudItem>
                            <MudButton OnClick="() => UpdateQuestionSetSchedule(context)" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Send">
                                Submit
                            </MudButton>
                        </MudItem>
                        <MudItem>
                            <MudButton OnClick="() => context.IsEditing = false" Variant="Variant.Filled" Color="Color.Error" StartIcon="@Icons.Material.Filled.Cancel">
                                Cancel
                            </MudButton>
                        </MudItem>
                    </MudGrid>
                </td>
            }
            else
            {
                <td class="align-middle">@(context.QuestionSet.StartAt?.ToString("U") ?? "-")</td>
                <td class="align-middle">@(context.QuestionSet.EndAt?.ToString("U") ?? "-")</td>
                <td class="align-middle">
                    <MudButton OnClick="() => context.IsEditing = true" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit">
                        Edit
                    </MudButton>
                </td>
            }
        </tr>
    </Virtualize>
    </tbody>
</MudSimpleTable>

@code {

    private List<QuestionSetViewModel> QuestionSetViewModels { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        QuestionSetViewModels = await _context.QuestionSets
            .Select(questionSet => new QuestionSetViewModel {QuestionSet = questionSet})
            .ToListAsync();
    }

    private async Task UpdateQuestionSetSchedule(QuestionSetViewModel vm)
    {
        _context.Update(vm.QuestionSet);
        await _context.SaveChangesAsync();
        vm.IsEditing = false;
        StateHasChanged();
    }

}