@page "/ManageQuestions/Create"
@attribute [Authorize(Roles = "Admin")]
@inject ApplicationDbContext _context
@inject ISnackbar _snackbar

<MudText Class="mb-4" Typo="Typo.h3">Manage Questions</MudText>

<MudTextField Class="my-4" @bind-Value="QuestionSet.Title" Label="Question Set Title" Variant="Variant.Text" FullWidth="true"/>

@{
    var n = 0;
    var lim = QuestionSet.Questions.Count;
}

<Virtualize Items="QuestionSet.Questions">
    <ViewQuestion Question="@context" Number="@(n++ % lim + 1)" IsEditing="true" IsNew="true"/>
</Virtualize>

<MudGrid>
    <MudItem>
        <MudButton OnClick="AddNewQuestion" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add">
            Add Question
        </MudButton>
    </MudItem>
    <MudItem>
        <MudButton OnClick="SaveQuestionSet" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Save">
            Save
        </MudButton>
    </MudItem>
    <MudItem>
        <MudButton Link="ManageQuestions" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowBack">
            Back
        </MudButton>
    </MudItem>
</MudGrid>

@code {

    private QuestionSet QuestionSet { get; set; } = new();

    private void AddNewQuestion()
    {
        QuestionSet.Questions.Add(new Question());
    }

    private async Task SaveQuestionSet()
    {
        await _context.AddAsync(QuestionSet);
        await _context.SaveChangesAsync();

        QuestionSet = new QuestionSet();
        StateHasChanged();

        _snackbar.Add("Question set created.", Severity.Success);
    }

}